{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","this","window","setInterval","console","log","props","date","toLocaleTimeString","prevProps","clockName","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","state","Date","hasClock","setState","document","addEventListener","React","ReactDOM","render","getElementById"],"mappings":"yLAOaA,EAAb,4MACEC,QAAU,EADZ,uDAGE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,IAAI,EAAKC,MAAMC,KAAKC,wBAC3B,OAPP,gCAUE,SAAmBC,GACbR,KAAKK,MAAMI,YAAcD,EAAUC,WAErCN,QAAQC,IAAR,uBAA4BI,EAAUC,UAAtC,eAAsDT,KAAKK,MAAMI,cAbvE,kCAiBE,WACEC,cAAcV,KAAKD,WAlBvB,oBAqBE,WACE,MAA4BC,KAAKK,MAAzBC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,UAEd,OACE,sBAAKE,UAAU,QAAf,UACE,iCAASF,IACR,YACAH,EAAKC,4BA5Bd,GAA2BK,aCJ3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IASZK,E,4MACJC,MAAe,CACbd,KAAM,IAAIe,KACVZ,UAAWI,IACXS,UAAU,G,EAGZvB,QAAU,E,EAEVU,UAAYR,OAAOC,aAAY,WAC7B,EAAKqB,SAAS,CAAEd,UAAWI,QAC1B,M,uDAEH,WAAqB,IAAD,OAClBb,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKqB,SAAS,CAAEjB,KAAM,IAAIe,SACzB,KACHrB,KAAKoB,MAAME,UAAW,EACtBtB,KAAKoB,MAAMX,UAAYI,IACvBW,SAASC,iBAAiB,eAAe,WACvC,EAAKF,SAAS,CAAED,UAAU,OAE5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKF,SAAS,CAAED,UAAU,S,oBAI9B,WACE,MAAsCtB,KAAKoB,MAAnCd,EAAR,EAAQA,KAAMG,EAAd,EAAcA,UAAWa,EAAzB,EAAyBA,SAEzB,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCW,GAAY,cAAC,EAAD,CAAOhB,KAAMA,EAAMG,UAAWA,W,GAjCjCiB,IAAMd,WAuCTO,ICnDfQ,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.0ea047dc.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  date: Date,\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, {}> {\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.log(this.props.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date, clockName } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <strong>{clockName}</strong>\n        {' time is '}\n        {date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  date: Date,\n  clockName: string,\n  hasClock: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    date: new Date(),\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  clockName = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n    this.state.hasClock = true;\n    this.state.clockName = getRandomName();\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { date, clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock date={date} clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}